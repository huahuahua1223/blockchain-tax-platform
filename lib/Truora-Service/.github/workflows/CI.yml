# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main, dev, "v*.*.*"]
    tags: ["v*.*.*"]

jobs:
  truora-java-sdk-ci:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 3

      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1

      - name: Set branch name
        id: set_branch_name
        run: |
          CURRENT_BRANCH_NAME="${BRANCH_NAME}"

          echo "current branch name is ${CURRENT_BRANCH_NAME}"
          echo "::set-output name=branch_name::$(echo ${CURRENT_BRANCH_NAME})"

      - name: Verify MySQL connection and create CI DB
        run: |
          sudo systemctl start mysql.service
          mysql --host=127.0.0.1 --port=3306 --user=root --password=root -e 'CREATE DATABASE IF NOT EXISTS truora;'
          mysql --host=127.0.0.1 --port=3306 --user=root --password=root -e 'show databases;'

      - name: Prepare blockchain nodes and certificates
        run: |
          mkdir -p fisco && cd fisco
          curl -LO https://github.com/FISCO-BCOS/FISCO-BCOS/releases/download/v2.6.0/build_chain.sh && chmod u+x build_chain.sh
          bash build_chain.sh -l "127.0.0.1:2" -p 30300,20200,8545
          bash nodes/127.0.0.1/start_all.sh
          ps -ef | grep -v grep | grep fisco
          cd ..
          cp ./fisco/nodes/127.0.0.1/sdk/* ${GITHUB_WORKSPACE}/src/main/resources

#       - name: Prepare gradle
#         uses: eskatos/gradle-command-action@v1
#         with:
#           gradle-version: 6.7
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Run CI
        run: |
          cd ${GITHUB_WORKSPACE}
          export SPRING_PROFILES_ACTIVE=ci && ./gradlew build test --info

      - name: Code Cov
        run: |
          cd ${GITHUB_WORKSPACE}
          ./gradlew check -i
          ./gradlew jacocoTestReport
          bash <(curl -s https://codecov.io/bash)

      - name: send custom message with args
        uses: appleboy/telegram-action@master
        if: ${{ failure() }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: "Run CI on ${{github.repository }}:${{steps.set_branch_name.outputs.branch_name}} FAILED !!!"

      - name: send custom message with args
        uses: appleboy/telegram-action@master
        if: ${{ success() }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: "Run CI on ${{github.repository }}:${{steps.set_branch_name.outputs.branch_name}} success."

